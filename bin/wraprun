#!/usr/bin/env python

# The MIT License (MIT)
#
# Copyright (c) 2015 M. Belhorn
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
'''
wraprun - A flexible Aprun task bundler.

This module provides the command line tool 'wraprun'. More information about
using wraprun can be found by issuing 

  wraprun --help

at the command line.
'''

from __future__ import print_function
from wraprun import Wraprun
from wraprun import GLOBAL_OPTIONS, GROUP_OPTIONS
from wraprun import Parsers
import sys

if __name__ == '__main__':
    #wraprun = Wraprun()
    #wraprun.eval()
    argv = sys.argv
    try:
        first_group_marker = argv.index(':')
    except ValueError:
        first_group_marker = len(argv)
    first_group = argv[1:first_group_marker]
    p = Parsers()
    cli = p.create_cli_parser()
    known_args = cli.parse_args(first_group)
    wraprun_global_args = GLOBAL_OPTIONS.wraprun_args(known_args)
    aprun_global_args = GLOBAL_OPTIONS.aprun_args(known_args)
    task_args = GROUP_OPTIONS.all_args(known_args)
    wrap = Wraprun(**wraprun_global_args)
    wrap.add_task(**task_args)
    # print(wraprun_global_args, aprun_global_args, task_args)
    remaining_argstrings = ' '.join(argv[first_group_marker + 1:]).split(':')
    # print(remaining_argstrings)
    for string in remaining_argstrings:
        # print(string)
        wrap.add_task(string=string)
    print(wrap)


